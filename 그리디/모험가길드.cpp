/*
	모험가 길드 
	작성자: 성연재
	작성일: 2021.12.03
	작성언어: C++
	
	문제
	한 마을에 모험가가 N명이 있다. 모험가 길드에서 N명의 모험가를 대상으로 '공포도'를 측정했는데 
	'공포도'가 높은 모험가는 쉽게 공포를 느껴 위험 상황에 대처할 수 있는 능력이 없다. 
	길드장은 모험가 그룹을 안전하게 구성하고자 한다. 이때 공포도가 X인 모험가는 X명 이상으로 구성된 그룹에
	참여해야 모험을 떠날 수 있다. 이때 그룹을 만들 수 있는 최대 그룹을 출력하라.
	
	예를 들어 N = 5이고, 각 모험가의 공포도가 2 3 1 2 2일 때 그룹1에는 공포도가 1, 2, 3인 모험가를 한 명씩
	넣고, 그룹2에 공포도가 2인 남은 두 명을 넣게되면 총 2개의 그룹을 만들 수 있다. 또한 몇 명의 모험가는
	마을에 그대로 남아 있어도 되기 때문에, 모든 모험가를 특정한 그룹에 넣을 필요는 없다. 
	 
	 입력조건
	 1. 첫째 줄에 모험가의 수 N이 주어집니다.(1 <= N <= 100,000)
	 2. 둘째 줄에 각 모험가의 공포도의 값을 N 이하의 자연수로 주어지며, 각 자연수는 공백으로 구분합니다. 
	 
	 출력 조건 
	 1. 여행을 떠날 수 있는 그룹 수의 최대값을 출력
	  
	 
	 입력예시
	 5
	 2 3 1 2 2
	 
	 
	 출력예시
	 2
	  
*/

#include <bits/stdc++.h>

using namespace std;

int n;
vector<int> v;

int main(void)
{
	cin >> n;
	for(int i = 0 ; i < n; i++)
	{
		int user;
		cin >> user;
		v.push_back(user);
	}
	
	sort(v.begin(), v.end());
	
	int group = 0;
	int member = 0;
	
	for(int i = 0; i < n; i++)
	{
		member += 1;
		if(member >= v[i])
		{
			group++;
			member = 0;
		}
	}
	
	cout << group;
} 
